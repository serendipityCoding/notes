{
  "title": "Lecture 5 CPU Scheduling",
  "cells": [
    {
      "type": "markdown",
      "data": "**When multiple VMs send instructions to the host, which instructions should the host CPU execute first**\n* implement in the hypervisor\n> Suppose there are two VMs, which have the same weight. But only VM 1 has job to do while VM 2 has nothing to do. Non work conserving scheduler is give VM 2 50% of the CPU time anyway. Work-conserving solution is giving VM 1 100% of the CPU time. The utilization is always better for work-serving solution.\n* Utilization:\n  1. working-conserving: the host CPU is idel if and only if there is no runnable VM, the weight acts as guarantees\n  2. Non working-conserving: weight are cap, each VM owns its fraction of CPU\n### CPU Schedulers in Xen\n* Borrowed Virtual Time Scheduling (originally invented to schedule processes in the OS): dispatches a runnable VM with the smallest virtual time first (frequency: every MCU) --> when the virtual time is the same, can choose any one\n  * Each VM has a weight and a virtual time counter\n  * If a VM is scheduled to run, its virtual time is incremented (vi+=(t/wi), t-->the time VM has been running)\n    * if the VM has bigger weight, the virtual time increment is relatively small, therefore, it will be allocated more CPU time which is corresponding the weight \n  * The unit of time is minimum charging unit, MCU, often decided by the frequency of clock interrupts\n![Screen Shot 2018-02-23 at 11.48.13 AM.png](quiver-image-url/AF9AA05FA0B704B3ABE8A09F3F569F7D.png =585x331)"
    }
  ]
}